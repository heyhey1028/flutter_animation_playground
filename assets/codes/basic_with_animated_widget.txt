import 'package:flutter/material.dart';

import '../../constants/sample_page.dart';
import '../../widgets/control_container.dart';

class BasicWithAnimatedWidget extends StatefulWidget {
  const BasicWithAnimatedWidget({super.key});

  @override
  State<BasicWithAnimatedWidget> createState() =>
      _BasicWithAnimatedWidgetState();
}

// 1. define StatefulWidget with SingleTickerProviderStateMixin
class _BasicWithAnimatedWidgetState extends State<BasicWithAnimatedWidget>
    with SingleTickerProviderStateMixin {
  // 2. define AnimationController & Tween & Animation
  late AnimationController _controller;
  late Tween<Offset> _tween;
  late Animation<Offset> _animation;

  bool hasAppeared = false;

  @override
  void initState() {
    // 3. initialize controller
    _controller = AnimationController(
      vsync: this,
      duration: const Duration(milliseconds: 500),
    );
    // 4. prepare Tween
    _tween = Tween<Offset>(begin: const Offset(-1000, 0), end: Offset.zero);
    // 5. create Animation by AnimationController x Tween
    _animation = _controller.drive(_tween);
    super.initState();
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        AnimatedDashBird(animation: _animation),
        ControlContainer(
          controller: _controller,
          sample: SamplePage.basicWithAnimatedWidget,
        ),
      ],
    );
  }
}

class AnimatedDashBird extends AnimatedWidget {
  const AnimatedDashBird({
    super.key,
    required Animation<Offset> animation,
  }) : super(listenable: animation);

  Animation<Offset> get _offset => listenable as Animation<Offset>;

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Transform.translate(
        offset: _offset.value,
        child: Image.asset(
          'assets/images/dash_bird_pc.png',
          width: 200,
          height: 200,
        ),
      ),
    );
  }
}

